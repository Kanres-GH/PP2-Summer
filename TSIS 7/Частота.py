"""
С какой скоростью крутится цикл while?
С большой, зависящей от мощности компьютера. Но в данном случае такая скорость не есть необходимость, она даже вредна,
так как бессмысленно расходует ресурсы. Человек дает команды и воспринимает изменения куда медленнее.

Для обновления экрана в динамической игре часто используют 60 кадров в секунду, а в статической, типа пазла, достаточно будет 30-ти.
Из этого следует, что циклу незачем работать быстрее.

Поэтому в главном цикле следует выполнять задержку.
Делают это либо вызовом функции delay() модуля time библиотеки pygame, либо создают объект часов и устанавливают ему частоту кадров.
Первый способ проще:

...
while 1:
    for i in pg.event.get():
        if i.type == pg.QUIT:
            sys.exit()
    pg.time.delay(20)

Функция delay() принимает количество миллисекунд (1000 мс = 1 с).
Если передано значение 20, то за секунду экран обновится 50 раз. Другими словами, частота составит 50 кадров в секунду.

Второй способ более профессиональный:

import pygame as pg
import sys
pg.display.set_mode((600, 400))
clock = pg.time.Clock()
while 1:
    for i in pg.event.get():
        if i.type == pg.QUIT:
            sys.exit()
    clock.tick(60)

Методу tick() класса Clock передается непосредственно желаемое количество кадров в секунду.
Задержку он вычисляет сам. То есть если внутри цикла указано tick(60) – это не значит,
что задержка будет 60 миллисекунд или произойдет 60 обновлений экрана за одну итерацию цикла.
Это значит, что на каждой итерации цикла секунда делится на 60 и уже на вычисленную величину выполняется задержка.
Значение частоты кадров желательно сохранить в какой-нибудь переменной, чтобы было меньше путаницы.
"""